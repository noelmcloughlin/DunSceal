<resources>

  <string name="google_maps_key">AIzaSyBfzAxqao47IorVL4lIIySt1_cDQawLbTw</string>

  <string name="app_name">DunSceal</string>
  <string name="hint_dunTitle">Dun Title</string>
  <string name="hint_dunDescription">Description </string>
  <string name="button_addDun">Add Dun</string>
  <string name="menu_addDun">Add/Edit</string>
  <string name="menu_cancelDun">Cancel</string>
  <string name="enter_dun_title"> Please enter a Dun Title </string>
  <string name="save_dun"> Save Dun </string>
  <string name="button_addImage"> Add Image </string>
  <string name="select_dun_image">Select dun image</string>
  <string name="change_dun_image">Change dun image</string>
  <string name="button_location">Set Location</string>
  <string name="title_activity_map">Map</string>
  <string name="TextView">TextView</string>
  <string name="ImageView">ImageView</string>
  <string name="CheckBox">CheckBox</string>
  <string name="Completed">Completed</string>


  <!-- Tabbed view pagers -->
  <string name="tab1_title">Duns</string>
  <string name="tab1_url">https://koenig-media.raywenderlich.com/uploads/2019/01/android_rw_flag_2.png</string>
  <string name="tab1_desc">Android is a mobile operating system by Google. Development for android platform is even
        more fun with Kotlin. We have an awesome lineup of Android DUNs that too based on Kotlin. Enjoy.. :]
    </string>

  <string name="tab2_title">Report</string>
  <string name="tab2_url">https://koenig-media.raywenderlich.com/uploads/2019/01/RxSwift.png</string>
  <string name="tab2_desc">The RxKotlin is an implementation of a Reactive Stream specification. Kotlin adds more
        fun to reactive programming as it adds convenient extension functions to RxJava. Go ahead and have a look to our
        Rx tabModel. :]
    </string>

  <string name="tab3_title">Account</string>
  <string name="tab3_url">https://koenig-media.raywenderlich.com/uploads/2019/01/kitura.png</string>
  <string name="tab3_desc">Kitura is a server-side Swift framework for building iOS backends and web applications.
        This framework creates REST APIs that can be invoked from the iOS applications. We have Kitura tabModel too :]
    </string>

  <string name="error_message">Error while loading image.</string>

  <!-- Login/Signup activities -->
  <string name="text_accounts">All Accounts</string>
  <string name="hint_user_name">Name</string>
  <string name="hint_user_email">Email</string>
  <string name="hint_user_password">Password</string>
  <string name="hint_confirm_password">Confirm Password</string>
  <string name="text_login">Login</string>
  <string name="text_register">Register</string>
  <string name="error_message_name">Enter Full Name</string>
  <string name="error_message_email">Enter Valid Email</string>
  <string name="error_message_password">Enter Password</string>
  <string name="success_message">Registration Successful</string>
  <string name="text_not_member">No account yet? Create one</string>
  <string name="error_email_exists">Email Already Exists</string>
  <string name="error_password_match">Password Does Not Matches</string>
  <string name="error_valid_email_password">Wrong Email or Password</string>
  <string name="text_hello">Hello,</string>
  <string name="text_title">dun</string>

  <!-- dun -->
  <string name="select_dunsceal_image">Select dunsceal image</string>

  <!-- Generic -->
  <string name="app_started">App Started</string>

  <!-- Date & Report Handling -->
  <string name="action_user_list">Settings</string>
  <string name="action_dun_list">Report</string>
  <string name="completeButton">Complete</string>
  <string name="date">Date</string>
  <string name="total_visited_so_far">Total number of Duns visited</string>
  <string name="totalSoFar">Total</string>
  <string name="defaultComplete">0</string>
  <string name="enter_date">Enter Date</string>

  <string name="isVisited">Visited</string>
  <string name="notVisited">Not visited</string>
  <string name="date_picker">Date Picker</string>
  <string name="default_date">"--/--/----"</string>

</resources>
